import pandas as pd
import os
import arcpy as ap



os.chdir(r"C:\Users\Matthias\Documents\UNIGIS\Masterthesis\Statistik\Ergebnisse")

df = pd.read_csv(r"C:\Users\Matthias\Documents\UNIGIS\Masterthesis\Statistik\Aufbereitung\03_befragung.csv",
                 sep=";",
                 decimal=",",
                 header=None,
                 names=["ID",
                        "sex",
                        "birthdate",
                        "origin",
                        "status",
                        "destination",
                        "accessibility",
                        "mode_day",
                        "casual_mode",
                        "mode_main",
                        "intermodal",
                        "second_mode",
                        "distance",
                        "duration",
                        "licence",
                        "car",
                        "par_orig",
                        "po_cost",
                        "par_dest",
                        "pd_cost",
                        "bike",
                        "ticket",
                        "dist_stop"])
#Spalte Alter anlegen
#Alter berechnen
df['age'] = 2018 - df['birthdate']
df['altersklasse'] = 'default'
'''
ich glaube die Systhematik mit row beißt sich mit dem Konzept Dataframe. 
Jedenfalls will die Funktion ja das Argument row übergeben bekommen. 
bzw. so wie es jetzt da steht, sagt er es fehlen alle drei Argumente.
'''

def customClassifier8(row, src_col1, output_col):
    if row[src_col1] <= 14:
        row[output_col] = 0
    elif row[src_col1] < 14 and row[src_col1] <= 19:
       row[output_col] = 1
    elif row[src_col1] < 19 and row[src_col1] <= 24:
        row[output_col] = 2
    elif row[src_col1] < 24 and row[src_col1] <= 34:
        row[output_col] = 3
    elif row[src_col1] < 34 and row[src_col1] <= 44:
        row[output_col] = 4
    elif row[src_col1] < 44 and row[src_col1] <= 54:
        row[output_col] = 5
    elif row[src_col1] < 54 and row[src_col1] <= 64:
        row[output_col] = 6
    elif row[src_col1] <= 65:
        row[output_col] = 7
    else:
        row[output_col] = 'funktion error'

    # Return the updated row
    return row
df.apply(customClassifier8, src_col1='age', output_col='altersklasse', axis=1)
print(df.altersklasse.value_counts(normalize=True, dropna=False))
